{"version":3,"sources":["utils/auth.js","components/Header/Header.js","components/Footer/Footer.js","assets/add.svg","components/JobCard/JobCard.js","utils/queries.js","components/Listing/index.js","pages/Home/Home.js","assets/audioWave.jpeg","assets/art.jpeg","assets/cooking.jpeg","assets/socialMedia.jpeg","assets/tech.jpeg","pages/Job/Job.js","utils/mutations.js","pages/Login/Login.js","pages/Signup/Signup.js","components/ProfileItem/index.js","pages/Profile/Profile.js","pages/PostJob/PostJob.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","Header","isLoggedIn","Auth","Navbar","collapseOnSelect","expand","variant","id","className","Container","Brand","as","Link","to","Toggle","Collapse","Nav","onClick","logout","Footer","JobCard","job","_id","name","price","description","QUERY_CATEGORIES","gql","QUERY_SINGLE_JOB","QUERY_ALL_JOBS","QUERY_JOBS_BY_CATEGORY","Listing","jobs","categoryId","useState","filter","setFilter","filterJobs","e","selected","currentTarget","dataset","category","useQuery","variables","loadingJobs","loading","jobsData","data","jobsByCategory","loadingCategories","categoriesData","categories","type","map","Button","href","Home","Row","Job","jobId","useParams","selectedImg","tech","audioWave","art","cooking","socialMedia","console","log","Card","Img","src","Body","Title","Text","user","firstName","lastName","email","LOGIN","ADD_USER","ADD_JOB","DELETE_JOB","Login","valid","setValid","password","formState","setFormState","useMutation","login","error","handleChange","event","target","value","handleSubmit","a","preventDefault","checkValidity","Col","xxl","xl","lg","md","sm","xs","Form","noValidate","validated","onSubmit","Group","Label","hidden","Control","required","placeholder","onChange","Feedback","Signup","addUser","userAdd","ProfileItem","deleteJob","handleDelete","jobDeleteId","reload","Profile","auth","getProfile","allJobs","PostJob","addJob","categoryData","parseFloat","rows","Select","disabled","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bde904db.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import \"./index.css\";\nimport React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\n\nexport default function Header() {\n  const logout = () => {\n    Auth.logout();\n  };\n\n  const isLoggedIn = Auth.getToken();\n\n  return (\n    <Navbar collapseOnSelect expand=\"lg\" variant=\"dark\" id=\"main-nav\" className=\"col\">\n      <Container className=\" justify-content-between\">\n        <Navbar.Brand as={Link} to=\"/\" className=\"col\">\n          Freelancer\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n        <Navbar.Collapse className=\"col\" id=\"responsive-navbar-nav\">\n          {!isLoggedIn ? (\n            <Nav className=\"header-nav\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/signup\">Signup</Nav.Link>\n              <Nav.Link as={Link} to=\"/login\">Login</Nav.Link>\n            </Nav>\n          ) : (\n            <Nav className=\"header-nav\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/profile\">Profile</Nav.Link>\n              <Nav.Link onClick={logout}>Logout</Nav.Link>\n            </Nav>\n          )}\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}","import \"./index.css\";\nimport React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"col-12 align-self-end py-3 footer\">\n      <div className=\"container text-center\">\n        <h4>Brought to you by Sami, James & Andreas.</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/add.91e5d2aa.svg\";","import \"./index.css\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function JobCard({job}) {\n  return (\n    <Link className=\"col-3 p-2\" to={`job/${job._id}`}>\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{job.name}</h5>\n          <h6 className=\"card-subtitle mb-2\">${job.price}</h6>\n          <p className=\"card-text\">{job.description}</p>\n        </div>\n      </div>\n    </Link>\n  );\n}","import { gql } from \"@apollo/client\";\n\nexport const QUERY_CATEGORIES = gql`\n  query {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_SINGLE_JOB = gql`\nquery Job($jobId: ID!) {\n  job(jobId: $jobId) {\n    _id\n    name\n    description\n    price\n    category {\n      _id\n      name\n    }\n    user {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n}\n`;\n\nexport const QUERY_ALL_JOBS = gql`\nquery allJobs {\n  allJobs {\n    _id\n    name\n    description\n    price\n    category {\n      _id\n      name\n    }\n    user {\n      _id\n      firstName\n      lastName\n      email\n      password\n    }\n  }\n}\n`;\n\nexport const QUERY_JOBS_BY_CATEGORY = gql`\n  query JobsByCategory($category: ID) {\n    jobsByCategory(category: $category) {\n      _id\n      description\n      price\n      name\n      category {\n        name\n        _id\n      }\n      user {\n        _id\n        firstName\n        lastName\n        email\n        password\n      }\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  query User {\n    user {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n`;\n","import \"./index.css\";\nimport addImage from \"../../assets/add.svg\";\nimport React, { useState } from \"react\";\nimport JobCard from \"../JobCard/JobCard\";\nimport { useQuery } from \"@apollo/client\";\nimport { QUERY_CATEGORIES, QUERY_JOBS_BY_CATEGORY } from \"../../utils/queries\";\nimport { Link } from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function Listing() {\n  const [filter, setFilter] = useState(\"\");\n  function filterJobs(e) {\n    const selected = e.currentTarget.dataset.category;\n    setFilter(selected);\n  }\n  let jobs;\n  let categoryId;\n  if (filter === \"\") {\n    categoryId = \"\";\n  } else {\n    categoryId = filter;\n  }\n  const { loading: loadingJobs, data: jobsData } = useQuery(\n    QUERY_JOBS_BY_CATEGORY,\n    {\n      variables: {\n        category: categoryId,\n      },\n    }\n  );\n  jobs = jobsData?.jobsByCategory || [];\n\n  const { loading: loadingCategories, data: categoriesData } =\n    useQuery(QUERY_CATEGORIES);\n  const categories = categoriesData?.categories || [];\n\n  return (\n    <div id=\"listing-area\">\n      <nav className=\"navbar navbar-expand-lg navbar-light\" id=\"category-nav\">\n        <button\n          className=\"navbar-toggler ms-3\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#responsive-categories\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse row justify-content-between ms-4\" id=\"responsive-categories\">\n          <ul className=\"navbar-nav col\">\n            <Nav.Link as={Link} to=\"/\">\n              <h3 onClick={filterJobs} id=\"all-categories\">\n                All\n              </h3>\n            </Nav.Link>\n            {loadingCategories\n              ? \"\"\n              : categories.map((category) => {\n                  return (\n                    <li className=\"nav-item\" key={category._id}>\n                      <h3\n                        onClick={filterJobs}\n                        data-category={category._id}\n                        className=\"nav-link text-dark\"\n                      >\n                        {category.name}\n                      </h3>\n                    </li>\n                  );\n                })}\n          </ul>\n        </div>\n        <div id=\"but-row\" className=\"row ms-auto mx-3\">\n          <Button className=\"col\" href=\"/post\">Post</Button>\n        </div>\n      </nav>\n\n      <div id=\"listings\" className=\"row card-row justify-content-center\">\n        {loadingJobs\n          ? \"\"\n          : jobs.map((job) => {\n              return (\n                <div className=\"col card-col\" key={job._id}>\n                  <JobCard job={job} />\n                </div>\n              );\n            })}\n      </div>\n    </div>\n  );\n}\n","import \"./index.css\";\nimport React from \"react\";\nimport { Header, Footer } from \"../../components\";\nimport { Outlet } from \"react-router-dom\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\n\nexport default function Home() {\n  return (\n    <Container id=\"page\">\n      <Row className=\"row-content justify-content-center\">\n        \n        <div id=\"content-top\" className=\"col align-self-start\">\n          <div className=\"row\">\n            <Header />\n            <Outlet />\n          </div>\n        </div>\n\n        <Footer />\n      </Row>\n    </Container>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/audioWave.bde8cb60.jpeg\";","export default __webpack_public_path__ + \"static/media/art.1540747f.jpeg\";","export default __webpack_public_path__ + \"static/media/cooking.2927bb37.jpeg\";","export default __webpack_public_path__ + \"static/media/socialMedia.befc021f.jpeg\";","export default __webpack_public_path__ + \"static/media/tech.98972c86.jpeg\";","import React from \"react\";\nimport \"./index.css\";\nimport { Container, Row, Card, Button } from \"react-bootstrap\";\nimport { audioWave, art, cooking, socialMedia, tech } from \"../../assets\";\n\nimport { QUERY_SINGLE_JOB } from \"../../utils/queries\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery } from \"@apollo/client\";\n\nexport default function Job() {\n    const { jobId } = useParams();\n    const { loading, data } = useQuery(QUERY_SINGLE_JOB, {\n        variables: {\n            jobId,\n        },\n    });\n    const job = data?.job || [];\n\n    let selectedImg = \"\";\n\n    if (!loading) {\n        selectedImg = job.category.name;\n        switch (selectedImg) {\n            case \"Tech\":\n                selectedImg = tech;\n                break;\n            case \"Audio\":\n                selectedImg = audioWave;\n                break;\n            case \"Art\":\n                selectedImg = art;\n                break;\n            case \"Cooking\":\n                selectedImg = cooking;\n                break;\n            case \"Social Media\":\n                selectedImg = socialMedia;\n                break;\n            default:\n                console.log(\"no category!\");\n        }\n    };\n\n    return (\n        <div id=\"job-content\">\n            {loading ? (\n                \"\"\n            ) : (\n                <Container id=\"job\">\n                    <Row className=\" justify-content-center\">\n                        <Card className=\"col\">\n                            <Card.Img variant=\"top\" src={selectedImg} />\n                            <Card.Body>\n                                <Card.Title>{job.name}</Card.Title>\n                                <Card.Text>{job.description}</Card.Text>\n                                <Card.Text className=\"row justify-content-center\">\n                                    ${job.price}\n                                </Card.Text>\n                                <Card.Text className=\"row justify-content-center\">\n                                    {job.user.firstName} {job.user.lastName}\n                                </Card.Text>\n                            </Card.Body>\n                            <Card.Body>\n                                <div className=\"row justify-content-center text-center\">\n                                    <Button href={`mailto:${job.user.email}`} className=\"col-4 bg-success\">Hire Me</Button>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </Row>\n                </Container>\n            )}\n        </div>\n    );\n}\n","import { gql } from \"@apollo/client\";\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation userAdd(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    userAdd(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const DELETE_USER = gql`\n  mutation UserAdd($id: ID!) {\n    userDelete(id: $id) {\n      _id\n    }\n}\n`\n\nexport const ADD_JOB = gql`\nmutation JobAdd($name: String!, $description: String!, $price: Float!, $category: ID!) {\n  jobAdd(name: $name, description: $description, price: $price, category: $category) {\n    _id\n    name\n    description\n    price\n    category {\n      _id\n      name\n    }\n    user {\n      _id\n      firstName\n      lastName\n      email\n    }\n  }\n}\n`\nexport const UPDATE_JOB = gql`\n  mutation JobUpdate($jobUpdateId: ID!, $name: String, $description: String, $price: Float) {\n    jobUpdate(id: $jobUpdateId, name: $name, description: $description, price: $price) {\n      _id\n      name\n      description\n      price\n      category {\n        _id\n        name\n      }\n    }\n  }\n`\nexport const DELETE_JOB = gql`\n  mutation JobDelete($jobDeleteId: ID!) {\n    jobDelete(id: $jobDeleteId) {\n      _id\n      name\n      description\n      price\n      category {\n        _id\n        name\n      }\n    }\n  }\n`","import \"./index.css\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nexport default function Login() {\n  const [valid, setValid] = useState(false);\n  const [formState, setFormState] = useState({ email: \"\", password: \"\" });\n  const [login, { error, data }] = useMutation(LOGIN);\n\n  // update state based on form input changes\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === true) {\n      try {\n        const { data } = await login({\n          variables: { ...formState },\n        });\n\n        Auth.login(data.login.token);\n      } catch (e) {\n        console.error(e);\n      }\n\n      // clear form values\n      setFormState({\n        email: \"\",\n        password: \"\",\n      });\n    }\n    setValid(true);\n  };\n\n  return (\n    <Row className=\"justify-content-center pt-5 mt-5\">\n      <Col xxl={4} xl={5} lg={6} md={7} sm={9} xs={10} className=\"\">\n        {data ? (\n          window.location.assign(\"/\")\n        ) : (\n          <Form\n            noValidate\n            validated={valid}\n            onSubmit={handleSubmit}\n            className=\"\"\n          >\n            <Form.Group className=\"mb-4\">\n              <Form.Label hidden={true}>Email Address</Form.Label>\n              <Form.Control\n                required\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email Address\"\n                value={formState.email}\n                onChange={handleChange}\n                className=\"\"\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please enter a valid email address.\n              </Form.Control.Feedback>\n            </Form.Group>\n\n            <Form.Group className=\"mb-4\">\n              <Form.Label hidden={true}>Password</Form.Label>\n              <Form.Control\n                required\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                value={formState.password}\n                onChange={handleChange}\n                className=\"\"\n              />\n              <Form.Control.Feedback type=\"invalid\">\n                Please enter a password.\n              </Form.Control.Feedback>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Log In\n            </Button>\n          </Form>\n        )}\n      </Col>\n    </Row>\n  );\n}\n","import \"./index.css\";\nimport React, { useState } from \"react\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { ADD_USER } from \"../../utils/mutations\";\nimport Auth from \"../../utils/auth\";\n\nimport { Form, Button, Col, Row } from \"react-bootstrap\";\n\nexport default function Signup() {\n  const [valid, setValid] = useState(false);\n  const [formState, setFormState] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [addUser, { error, data }] = useMutation(ADD_USER);\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === true) {\n      try {\n        const { data } = await addUser({\n          variables: { ...formState },\n        });\n\n        Auth.login(data.userAdd.token);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    setValid(true);\n  };\n  \n  return (\n    <Row className=\"justify-content-center pt-5 mt-5\">\n      <Col xxl={4} xl={5} lg={6} md={7} sm={9} xs={10}>\n        <Form noValidate validated={valid} onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-4\">\n            <Form.Label hidden={true}>First Name</Form.Label>\n            <Form.Control\n              className=\"\"\n              placeholder=\"First Name\"\n              required\n              type=\"text\"\n              name=\"firstName\"\n              value={formState.firstName}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a first name.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label hidden={true}>Last Name</Form.Label>\n            <Form.Control\n              className=\"\"\n              placeholder=\"Last Name\"\n              required\n              type=\"text\"\n              name=\"lastName\"\n              value={formState.lastName}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a last name.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label hidden={true}>Email Address</Form.Label>\n            <Form.Control\n              className=\"\"\n              placeholder=\"Email Address\"\n              required\n              type=\"email\"\n              name=\"email\"\n              value={formState.email}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid email address.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label hidden={true}>Password</Form.Label>\n            <Form.Control\n              className=\"\"\n              placeholder=\"Password\"\n              required\n              type=\"password\"\n              name=\"password\"\n              value={formState.password}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a password.\n            </Form.Control.Feedback>\n          </Form.Group>\n          <Button variant=\"primary\" type=\"submit\">\n            Sign Up\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n","// import \"./index.css\";\nimport { useMutation } from \"@apollo/client\";\nimport React from \"react\";\nimport { Card, Button } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { DELETE_JOB } from \"../../utils/mutations\";\n\nexport default function ProfileItem({ job, selectedImg }) {\n  const [deleteJob, {error, data}] = useMutation(DELETE_JOB)\n  \n  const handleDelete = async (id) => {\n    console.log(id);\n    try {\n      const data = await deleteJob({\n          variables: {\n              jobDeleteId: id\n          }\n      });\n      window.location.reload();\n    } catch (error) {\n        \n    }\n  };\n\n  return (\n    <Card className=\"col\" id=\"profile\">\n      <Card.Img src={selectedImg} />\n      <Card.Body>\n        <Card.Title>{job.name}</Card.Title>\n        <Card.Text>{job.description}</Card.Text>\n      </Card.Body>\n      <Card.Body>\n        <div className=\"row justify-content-between\">\n          <Button\n            className=\"col-4\"\n            type=\"button\"\n            as={Link}\n            to={`edit/${job._id}`}\n          >\n            Edit\n          </Button>\n          <Button\n            className=\"col-4 bg-danger\"\n            type=\"button\"\n            data-category={job._id}\n            onClick={() => handleDelete(job._id)}\n          >\n            Delete\n          </Button>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n}\n","import \"./index.css\";\nimport React from \"react\";\nimport { QUERY_ALL_JOBS } from \"../../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\nimport { audioWave, art, cooking, socialMedia, tech } from \"../../assets\";\nimport Auth from \"../../utils/auth\";\nimport ProfileItem from \"../../components/ProfileItem\";\n\nexport default function Profile() {\n  const auth = Auth.getProfile();\n  const { loading, data } = useQuery(QUERY_ALL_JOBS);\n  const jobs = data?.allJobs;\n\n  return (\n    <div className=\"row justify-content-center p-5\" key={''} >\n      {loading\n        ? \"\"\n        : jobs.map((job) => {\n            if (job.user._id === auth.data._id) {\n              const id = job._id;\n              let selectedImg = \"\";\n\n              if (job.user._id === auth.data._id) {\n                selectedImg = job.category.name;\n                switch (selectedImg) {\n                  case \"Tech\":\n                    selectedImg = tech;\n                    break;\n                  case \"Audio\":\n                    selectedImg = audioWave;\n                    break;\n                  case \"Art\":\n                    selectedImg = art;\n                    break;\n                  case \"Cooking\":\n                    selectedImg = cooking;\n                    break;\n                  case \"Social Media\":\n                    selectedImg = socialMedia;\n                    break;\n                  default:\n                    console.log(\"no category!\");\n                }\n              }\n\n              return (\n                <div className=\"col\" key={job}>\n                  <ProfileItem job={job} selectedImg={selectedImg} />\n                </div>\n              );\n            }\n          })}\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { QUERY_CATEGORIES } from \"../../utils/queries\";\nimport { ADD_JOB } from \"../../utils/mutations\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\n\nexport default function PostJob() {\n  const [valid, setValid] = useState(false);\n  const [formState, setFormState] = useState({\n    name: \"\",\n    price: \"\",\n    description: \"\",\n    category: \"\",\n  });\n  const [addJob, { error }] = useMutation(ADD_JOB);\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n  const categories = categoryData?.categories || [];\n\n  const handleChange = (event) => {\n    let { name, value } = event.target;\n\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n\n    if (form.checkValidity() === true) {\n      try {\n        let price = parseFloat(formState.price);\n        console.log(price);\n        const job = {\n          name: formState.name,\n          description: formState.description,\n          price: price,\n          category: formState.category,\n        };\n        console.log(job);\n        const { data } = addJob({\n          variables: {\n            ...job,\n          },\n        });\n        window.location.assign('/');\n        console.log(\"Success!\");\n      } catch (e) {\n        console.error(e);\n        console.log(e);\n      }\n    }\n    setValid(true);\n  };\n  return (\n    <Row className=\"justify-content-center mt-5\">\n      <Col xxl={4} xl={5} lg={6} md={7} sm={9} xs={10}>\n        <Form noValidate validated={valid} onSubmit={handleSubmit}>\n          <Form.Group className=\"mb-4\">\n            <Form.Label hidden={true}>Title</Form.Label>\n            <Form.Control\n              className=\"\"\n              placeholder=\"Title\"\n              required\n              type=\"text\"\n              name=\"name\"\n              // value={formState.title}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a title.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label hidden={true}>Price</Form.Label>\n            <Form.Control\n              className=\"\"\n              placeholder=\"$$$\"\n              required\n              type=\"number\"\n              name=\"price\"\n              value={formState.price}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a price.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Label hidden={true}>Description</Form.Label>\n            <Form.Control\n              className=\"\"\n              placeholder=\"Description\"\n              required\n              as=\"textarea\"\n              rows={5}\n              name=\"description\"\n              value={formState.description}\n              onChange={handleChange}\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please enter a valid description.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group className=\"mb-4\">\n            <Form.Select\n              onChange={handleChange}\n              required\n              aria-label=\"Default select example\"\n              name=\"category\"\n            >\n              <option selected disabled>Please select a Category</option>\n              {!loading ? (\n                categories.map((category) => {\n                  return (\n                    <option key={category._id} value={category._id}>\n                      {category.name}\n                    </option>\n                  );\n                })\n              ) : (\n                <option></option>\n              )}\n            </Form.Select>\n            <Form.Control.Feedback type=\"invalid\">\n              Please select a catgeory.\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button variant=\"primary\" type=\"submit\">\n            POST\n          </Button>\n        </Form>\n      </Col>\n    </Row>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from \"@apollo/client\";\nimport { setContext } from \"@apollo/client/link/context\";\n\nimport { Home, Job, Login, Signup, Profile, PostJob } from \"./pages\"\nimport { Listing } from \"./components\"\n\n\nconst httpLink = createHttpLink({\n  uri: \"/graphql\",\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem(\"id_token\");\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<Home />}>\n            <Route path=\"/\" element={<Listing />} />\n            <Route path=\"job/:jobId\" element={<Job />} />\n            <Route path=\"login\" element={<Login />} />\n            <Route path=\"signup\" element={<Signup />} />\n            <Route path=\"profile\" element={<Profile />} /> \n            <Route path=\"post\" element={<PostJob />} /> \n          </Route>\n        </Routes>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.min.js\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}